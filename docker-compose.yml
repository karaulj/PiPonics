version: "3"

volumes:
  sql:
  common:
    driver: local
    driver_opts:
      type: overlay2
      device: ./common
      o: bind

services:
  db-init:
    build:
      context: ./init/db
      dockerfile: Dockerfile
    volumes:
      - ./${CONFIG_FILE}:/home/${CONFIG_FILE}
      - ./utils/${CONFIG_UTILS_PY_FILE}:/home/${CONFIG_UTILS_PY_FILE}
      - ./utils/${DB_UTILS_PY_FILE}:/home/${DB_UTILS_PY_FILE}
      - sql:/sql
    environment:
      CONFIG_FILE: ${CONFIG_FILE}
      CONFIG_UTILS_PY_FILE: ${CONFIG_UTILS_PY_FILE}
      DB_INIT_SQL_FILE: ${DB_INIT_SQL_FILE}

  config-init:
    build:
      context: ./init/config
      dockerfile: Dockerfile
    volumes:
      - ./${CONFIG_FILE}:/home/${CONFIG_FILE}
      - ./utils/${CONFIG_UTILS_PY_FILE}:/home/${CONFIG_UTILS_PY_FILE}
      - common:/common
    environment:
      CONFIG_FILE: ${CONFIG_FILE}
      CONFIG_UTILS_PY_FILE: ${CONFIG_UTILS_PY_FILE}
      DESCRIPTION_FILE: ${DESCRIPTION_FILE}

  db:
    hostname: ${POSTGRES_HOST}
    image: postgres:13.1
    restart: always
    depends_on:
      - db-init
    volumes:
      - sql:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:${POSTGRES_PORT}"
    #command: /bin/sh -c "while [ ! -f /docker-entrypoint-initdb.d/${DB_INIT_FILE} ]; do echo 'waiting for db init script...'; sleep 1; done;"
    #command: /bin/sh -c "while [ ! -f /docker-entrypoint-initdb.d/${DB_INIT_FILE} ]; do echo 'waiting for db init script...'; sleep 1; done;" && postgres
    #command: "/bin/sh -c echo 'waiting for db init script...'; sleep 1; && postgres"
    #command: /bin/sh -c "echo 'hello world'"

  backend:
    hostname: ${BACKEND_HOSTNAME}
    build:
      context: ./backend-server-flask
      dockerfile: Dockerfile
    depends_on:
      - config-init
      - db-init
      - db
    volumes:
      - ./utils/${CONFIG_UTILS_PY_FILE}:/home/${CONFIG_UTILS_PY_FILE}
      - ./utils/${ENTITY_UTILS_PY_FILE}:/home/${ENTITY_UTILS_PY_FILE}
      - ./utils/${HTTP_UTILS_PY_FILE}:/home/${HTTP_UTILS_PY_FILE}
      - ./utils/${DB_UTILS_PY_FILE}:/home/${DB_UTILS_PY_FILE}
      - common:/common
    environment:
      DESCRIPTION_FILE: ${DESCRIPTION_FILE}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      BACKEND_PORT: ${BACKEND_PORT}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    devices:
      - "/dev/ttyAMA0:/dev/ttyAMA0"

  # frontend:
  #   build: './frontend-server-angular'
  #   depends_on:
  #     - backend
  #   ports:
  #     - "4200:${WEB_UI_PORT}"
