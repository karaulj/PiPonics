version: "3"

volumes:
  sql:
  # logs:
  #   driver: local
  #   driver_opts:
  #     type: overlay2
  #     device: ./logs
  #     o: bind

services:
  db-init:
    build: ./db-setup
    volumes:
      - ./${CONFIG_FILE}:/home/${CONFIG_FILE}
      - sql:/sql
    environment:
      CONFIG_FILE: ${CONFIG_FILE}
      DB_INIT_FILE: ${DB_INIT_FILE}

  db:
    image: postgres:13.1
    restart: always
    depends_on:
      - "db-init"
    volumes:
      - sql:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:${POSTGRES_PORT}"
    #command: /bin/sh -c "while [ ! -f /docker-entrypoint-initdb.d/${DB_INIT_FILE} ]; do echo 'waiting for db init script...'; sleep 1; done;"
    #command: /bin/sh -c "while [ ! -f /docker-entrypoint-initdb.d/${DB_INIT_FILE} ]; do echo 'waiting for db init script...'; sleep 1; done;" && postgres
    #command: sudo -u postgres postgres
    #command: "/bin/sh -c echo 'waiting for db init script...'; sleep 1; && postgres"
    #command: /bin/sh -c "echo 'hello world'"
  #
  # backend:
  #   build: './backend-server-flask'
  #   depends_on:
  #     - "db"
  #   ports:
  #     - "5000:${API_PORT}"
  #
  # frontend:
  #   build: './frontend-server-angular'
  #   depends_on:
  #     - "backend"
  #   ports:
  #     - "4200:${USER_PORT}"
